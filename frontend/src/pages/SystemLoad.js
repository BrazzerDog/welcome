import React, { useState } from 'react';
import { Container, Paper, Button, Typography, Box, CircularProgress, Fade } from '@mui/material';
import axios from 'axios';
import { styled } from '@mui/material/styles';

// –°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const StyledContainer = styled(Container)(({ theme }) => ({
  minHeight: '100vh',
  marginTop: theme.spacing(4),
  marginBottom: theme.spacing(4),
  background: 'linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), url("/images/all.jpg")',
  backgroundSize: 'cover',
  backgroundPosition: 'center',
  backgroundAttachment: 'fixed',
  paddingTop: theme.spacing(4),
  paddingBottom: theme.spacing(4),
  maxWidth: '100% !important',
  width: '100%',
  margin: 0
}));

const StyledPaper = styled(Paper)(({ theme }) => ({
  padding: theme.spacing(4),
  background: 'rgba(255, 255, 255, 0.15)',
  boxShadow: '0 8px 32px 0 rgba(31, 38, 135, 0.37)',
  backdropFilter: 'blur(4px)',
  borderRadius: '20px',
  border: '1px solid rgba(255, 255, 255, 0.18)',
  transition: 'transform 0.2s ease-in-out',
  '&:hover': {
    transform: 'translateY(-5px)',
  },
}));

const Terminal = styled(Paper)(({ theme }) => ({
  padding: theme.spacing(2),
  backgroundColor: 'rgba(0, 0, 0, 0.95)',
  color: '#00ff00',
  fontFamily: 'Consolas, Monaco, "Courier New", monospace',
  minHeight: '800px',
  maxHeight: '800px',
  overflow: 'auto',
  marginTop: theme.spacing(3),
  borderRadius: '10px',
  boxShadow: 'inset 0 0 20px rgba(0, 255, 0, 0.3)',
  fontSize: '13px',
  lineHeight: '1.2',
  '&::-webkit-scrollbar': {
    width: '12px',
  },
  '&::-webkit-scrollbar-track': {
    background: '#1a1a1a',
  },
  '&::-webkit-scrollbar-thumb': {
    background: '#00ff00',
    borderRadius: '6px',
  },
}));

const StyledButton = styled(Button)(({ theme }) => ({
  padding: theme.spacing(1.5, 4),
  fontSize: '1.1rem',
  fontWeight: 'bold',
  borderRadius: '10px',
  textTransform: 'none',
  background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',
  boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',
  transition: 'all 0.3s ease',
  '&:hover': {
    transform: 'scale(1.05)',
    boxShadow: '0 6px 10px 4px rgba(33, 203, 243, .3)',
  },
  '&:disabled': {
    background: '#gray',
  },
}));

// –ú–µ–Ω—è–µ–º –≤—Å–µ –ª–æ–≥–∏ –Ω–∞ –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏
const searchLogs = [
  '[15:07:38] üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è...',
  'root@neurocascade:~$ sudo systemctl status neural-search',
  '‚óè neural-search.service - Neural Search Service',
  '     Loaded: loaded (/etc/systemd/system/neural-search.service)',
  '     Active: active (running) since Thu 2024-03-15 14:55:23 UTC; 12min ago',
  '     Docs: man:neural-search(8)',
  '     Process: 13337 ExecStart=/usr/bin/neural-search --daemon',
  '     Main PID: 13338 (neural-search)',
  '     Tasks: 23 (limit: 4915)',
  '     Memory: 1.2G',
  '     CPU: 12.3%',
  '     CGroup: /system.slice/neural-search.service',
  '           ‚îî‚îÄ13338 /usr/bin/neural-search --daemon',
  '',
  'root@neurocascade:~$ ./quantum-scan.sh --deep --threads 16',
  '[15:07:39] [INIT] –ó–∞–≥—Ä—É–∑–∫–∞ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤...',
  '[15:07:39] [SYS] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö...',
  '[15:07:39] [QUANTUM] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–≤–∞–Ω—Ç–æ–≤–æ–≥–æ —è–¥—Ä–∞...',
  '[15:07:39] [MEMORY] –í—ã–¥–µ–ª–µ–Ω–æ 16GB –ø–æ–¥ –∫–≤–∞–Ω—Ç–æ–≤—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è',
  '[15:07:39] [CPU] –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: 78%',
  '[15:07:39] [GPU] CUDA cores: –∞–∫—Ç–∏–≤–Ω—ã',
  '[15:07:39] [NET] –°–µ—Ç–µ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –∞–∫—Ç–∏–≤–µ–Ω',
  '[15:07:39] [INIT] –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π...',
  '[15:07:39] [SYS] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–≤–∞–Ω—Ç–æ–≤–æ–π –∑–∞–ø—É—Ç–∞–Ω–Ω–æ—Å—Ç–∏...',
  '[15:07:39] [QUANTUM] –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∫—É–±–∏—Ç–æ–≤...',
  '[15:07:39] [INFO] –ö–≤–∞–Ω—Ç–æ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: OK',
  '[15:07:39] [DEBUG] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤',
  '[15:07:39] [SYS] –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤...',
  'root@neurocascade:~$ cat /proc/quantum/status',
  'QubitCount: 1024',
  'ErrorRate: 0.0001%',
  'Coherence: 99.99%',
  'Temperature: 0.015K',
  'State: OPERATIONAL',
  '',
  '[15:07:40] [SEARCH] –ù–∞—á–∞–ª–æ –∫–≤–∞–Ω—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞...',
  '[15:07:40] [INFO] –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ–∫—Ç–æ—Ä–∞ A1...',
  '–ü—Ä–æ–≥—Ä–µ—Å—Å: [##########] 100%',
  '[15:07:40] [INFO] –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ–∫—Ç–æ—Ä–∞ A2...',
  '–ü—Ä–æ–≥—Ä–µ—Å—Å: [##########] 100%',
  '[15:07:40] [INFO] –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ–∫—Ç–æ—Ä–∞ A3...',
  '–ü—Ä–æ–≥—Ä–µ—Å—Å: [##########] 100%',
  '[15:07:40] [DEBUG] –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–≤–∞–Ω—Ç–æ–≤—ã–µ —Ñ–ª—É–∫—Ç—É–∞—Ü–∏–∏ –≤ —Å–µ–∫—Ç–æ—Ä–µ B1',
  '[15:07:40] [SYS] –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–≤–∞–Ω—Ç–æ–≤–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –æ—à–∏–±–æ–∫...',
  '[15:07:40] [INFO] –ö–æ—Ä—Ä–µ–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–∞',
  'root@neurocascade:~$ tail -f /var/log/quantum/search.log',
  '2024-03-15 15:07:40 [INFO] –ö–≤–∞–Ω—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–µ–Ω',
  '2024-03-15 15:07:40 [DEBUG] –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...',
  '2024-03-15 15:07:40 [INFO] –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: 1337',
  '2024-03-15 15:07:40 [SYS] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...',
  '',
  'root@neurocascade:~$ ls -la /var/quantum/results/',
  'total 1337',
  'drwxr-xr-x 2 root root 4096 Mar 15 15:07 .',
  'drwxr-xr-x 4 root root 4096 Mar 15 15:07 ..',
  '-rw-r--r-- 1 root root 8192 Mar 15 15:07 quantum_results.dat',
  '-rw-r--r-- 1 root root 4096 Mar 15 15:07 neural_patterns.bin',
  '',
  '[15:07:41] [SUCCESS] –ö–≤–∞–Ω—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ',
  '[15:07:41] [INFO] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...',
  'root@neurocascade:~$ cat /var/quantum/metrics.log',
  'CPU Usage: 78%',
  'Memory: 13.37GB/32GB',
  'Quantum Core Temperature: Optimal',
  'Neural Network Load: 89%',
  'Error Rate: 0.0001%',
  'Success Rate: 99.99%',
  '[15:07:41] ‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'
];

const analyzeLogs = [
  '[15:07:40] üìä –ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—è –∞–Ω–∞–ª–∏–∑–∞...',
  'root@neurocascade:~$ ./neural-analyzer --mode deep',
  '[15:07:40] [INIT] –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π –ò–ò...',
  '[15:07:40] [SYS] TensorFlow v2.8.0 –∑–∞–≥—Ä—É–∂–µ–Ω',
  '[15:07:40] [SYS] PyTorch v1.9.0 –∑–∞–≥—Ä—É–∂–µ–Ω',
  '[15:07:40] [SYS] Keras v2.4.3 –∑–∞–≥—Ä—É–∂–µ–Ω',
  '[15:07:40] [CUDA] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CUDA cores...',
  '[15:07:40] [MEMORY] –í—ã–¥–µ–ª–µ–Ω–æ 24GB –ø–æ–¥ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏',
  '[15:07:40] [NET] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...',
  '[15:07:40] [SYS] –ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ—Å–æ–≤ –º–æ–¥–µ–ª–µ–π...',
  '[15:07:40] [INFO] –ú–æ–¥–µ–ª—å BERT: –∑–∞–≥—Ä—É–∂–µ–Ω–∞',
  '[15:07:40] [INFO] –ú–æ–¥–µ–ª—å GPT: –∑–∞–≥—Ä—É–∂–µ–Ω–∞',
  '[15:07:40] [INFO] –ú–æ–¥–µ–ª—å ResNet: –∑–∞–≥—Ä—É–∂–µ–Ω–∞',
  '[15:07:40] [DEBUG] –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU –ø–∞–º—è—Ç–∏...',
  'root@neurocascade:~$ nvidia-smi',
  '+-----------------------------------------------------------------------------+',
  '| NVIDIA-SMI 470.82.01    Driver Version: 470.82.01    CUDA Version: 11.4     |',
  '|-------------------------------+----------------------+----------------------+',
  '| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |',
  '| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |',
  '|                               |                      |               MIG M. |',
  '|===============================+======================+======================|',
  '|   0  NVIDIA A100         On   | 00000000:00:05.0 Off |                    0 |',
  '| N/A   32C    P0    65W / 300W |  23024MiB / 40536MiB |     42%      Default |',
  '|                               |                      |             Disabled |',
  '+-------------------------------+----------------------+----------------------+',
  '',
  '[15:07:41] [INIT] –ó–∞–ø—É—Å–∫ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π...',
  '[15:07:41] [SYS] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–π–ø–ª–∞–π–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞...',
  '[15:07:41] [INFO] –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞...',
  'root@neurocascade:~$ ls -l /data/neural/',
  'total 8.4G',
  '-rw-r--r-- 1 root root 2.1G Mar 15 15:07 dataset_1.h5',
  '-rw-r--r-- 1 root root 2.3G Mar 15 15:07 dataset_2.h5',
  '-rw-r--r-- 1 root root 2.0G Mar 15 15:07 dataset_3.h5',
  '-rw-r--r-- 1 root root 2.0G Mar 15 15:07 dataset_4.h5',
  '',
  '[15:07:41] [PROCESS] –ù–∞—á–∞–ª–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö...',
  '[15:07:41] [INFO] Batch 1/4 –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ...',
  '–ü—Ä–æ–≥—Ä–µ—Å—Å: [##########] 100%',
  '[15:07:41] [INFO] Batch 2/4 –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ...',
  '–ü—Ä–æ–≥—Ä–µ—Å—Å: [##########] 100%',
  '[15:07:41] [INFO] Batch 3/4 –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ...',
  '–ü—Ä–æ–≥—Ä–µ—Å—Å: [##########] 100%',
  '[15:07:41] [INFO] Batch 4/4 –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ...',
  '–ü—Ä–æ–≥—Ä–µ—Å—Å: [##########] 100%',
  '',
  '[15:07:42] [DEBUG] –ê–≥—Ä–µ–≥–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...',
  '[15:07:42] [INFO] –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≥–ª—É–±–æ–∫–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è...',
  '[15:07:42] [SYS] –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–≤—è–∑–µ–π...',
  'root@neurocascade:~$ cat /var/log/neural/training.log',
  'Epoch 1/5: loss=0.0342, accuracy=0.9876',
  'Epoch 2/5: loss=0.0256, accuracy=0.9901',
  'Epoch 3/5: loss=0.0198, accuracy=0.9923',
  'Epoch 4/5: loss=0.0165, accuracy=0.9945',
  'Epoch 5/5: loss=0.0143, accuracy=0.9967',
  '',
  '[15:07:42] [SUCCESS] –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ',
  '[15:07:42] [INFO] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...',
  'root@neurocascade:~$ ls -la /var/neural/results/',
  'total 2048',
  'drwxr-xr-x 2 root root 4096 Mar 15 15:07 .',
  'drwxr-xr-x 4 root root 4096 Mar 15 15:07 ..',
  '-rw-r--r-- 1 root root 1024M Mar 15 15:07 model_weights.h5',
  '-rw-r--r-- 1 root root 512M Mar 15 15:07 analysis_results.npz',
  '',
  '[15:07:43] [INFO] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...',
  'root@neurocascade:~$ cat /var/neural/metrics.log',
  'Model Performance Metrics:',
  'Accuracy: 99.67%',
  'Precision: 99.45%',
  'Recall: 99.32%',
  'F1 Score: 99.38%',
  'GPU Memory Usage: 23GB/40GB',
  'Training Time: 127.3s',
  '',
  '[15:07:43] ‚úÖ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!'
];

const aggregateLogs = [
  '[15:07:41] üì¶ –ó–∞–ø—É—Å–∫ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...',
  'root@neurocascade:~$ docker ps | grep neural',
  'CONTAINER ID   IMAGE                COMMAND     CREATED          STATUS',
  'a1b2c3d4e5f6   neural-aggregator    "/bin/sh"   12 hours ago     Up 12 hours',
  'f6e5d4c3b2a1   neural-processor     "/bin/sh"   12 hours ago     Up 12 hours',
  '',
  'root@neurocascade:~$ ./aggregate-data.sh --parallel --shards 16',
  '[15:07:41] [INIT] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞...',
  '[15:07:41] [SYS] –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤...',
  '[15:07:41] [MEMORY] –î–æ—Å—Ç—É–ø–Ω–æ: 64GB',
  '[15:07:41] [CPU] –î–æ—Å—Ç—É–ø–Ω–æ —è–¥–µ—Ä: 16',
  '[15:07:41] [STORAGE] –î–æ—Å—Ç—É–ø–Ω–æ: 1.2TB',
  '[15:07:41] [NET] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤...',
  '',
  'root@neurocascade:~$ ifconfig',
  'eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500',
  '        inet 192.168.1.100  netmask 255.255.255.0  broadcast 192.168.1.255',
  '        inet6 fe80::1  prefixlen 64  scopeid 0x20<link>',
  '        ether 00:15:5d:01:ca:05  txqueuelen 1000  (Ethernet)',
  '        RX packets 1235813  bytes 1.8 GB',
  '        RX errors 0  dropped 0  overruns 0  frame 0',
  '        TX packets 1147721  bytes 1.6 GB',
  '        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0',
  '',
  '[15:07:42] [INIT] –ó–∞–ø—É—Å–∫ –≤–æ—Ä–∫–µ—Ä–æ–≤...',
  'root@neurocascade:~$ ps aux | grep worker',
  'root      1337  0.0  0.0   8160  2.3M S    15:07   0:00 worker_1',
  'root      1338  0.0  0.0   8160  2.3M S    15:07   0:00 worker_2',
  'root      1339  0.0  0.0   8160  2.3M S    15:07   0:00 worker_3',
  'root      1340  0.0  0.0   8160  2.3M S    15:07   0:00 worker_4',
  '',
  '[15:07:42] [PROCESS] –ù–∞—á–∞–ª–æ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏...',
  'worker_1 | –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞—Ä–¥–∞ 1/4: [##########] 100%',
  'worker_2 | –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞—Ä–¥–∞ 2/4: [##########] 100%',
  'worker_3 | –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞—Ä–¥–∞ 3/4: [##########] 100%',
  'worker_4 | –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞—Ä–¥–∞ 4/4: [##########] 100%',
  '',
  '[15:07:43] [DEBUG] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö...',
  'root@neurocascade:~$ sha256sum /var/data/shards/*',
  '6a1b2c3d4e5f... shard_1.dat',
  '7b2c3d4e5f6a... shard_2.dat',
  '8c3d4e5f6a7b... shard_3.dat',
  '9d4e5f6a7b8c... shard_4.dat',
  '',
  '[15:07:43] [INFO] –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...',
  '[15:07:43] [SYS] –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ MapReduce...',
  '[15:07:43] [DEBUG] –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤...',
  '',
  'root@neurocascade:~$ df -h /var/data',
  'Filesystem      Size  Used  Avail Use% Mounted on',
  '/dev/sda1       1.2T  428G  772G  36% /var/data',
  '',
  '[15:07:44] [INFO] –°–∂–∞—Ç–∏–µ –¥–∞–Ω–Ω—ã—Ö...',
  'Compression ratio: 2.7:1',
  'Original size: 428GB',
  'Compressed size: 158GB',
  '',
  '[15:07:44] [SUCCESS] –ê–≥—Ä–µ–≥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
  '[15:07:44] [INFO] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...',
  '',
  'root@neurocascade:~$ cat /var/log/aggregation/summary.log',
  'Total records processed: 1,337,420',
  'Processing time: 183.5s',
  'Average throughput: 7,289 records/s',
  'Memory peak usage: 48.2GB',
  'CPU utilization: 92%',
  'Network I/O: 3.4GB/s',
  '',
  '[15:07:44] ‚úÖ –ê–≥—Ä–µ–≥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'
];

function SystemLoad() {
  const [logs, setLogs] = useState([]);
  const [loading, setLoading] = useState(false);

  const handleOperation = async (operation) => {
    setLoading(true);
    setLogs([]);
    
    let logsToShow;
    switch(operation) {
      case 'search':
        logsToShow = searchLogs;
        break;
      case 'analyze':
        logsToShow = analyzeLogs;
        break;
      case 'aggregate':
        logsToShow = aggregateLogs;
        break;
      default:
        logsToShow = [];
    }

    // –í—ã–≤–æ–¥–∏–º –ø–æ 10 —Å—Ç—Ä–æ–∫ –∫–∞–∂–¥—ã–µ 2–º—Å
    for (let i = 0; i < logsToShow.length; i += 10) {
      const chunk = logsToShow.slice(i, i + 10);
      setLogs(prev => [...prev, ...chunk]);
      await new Promise(resolve => setTimeout(resolve, 2));
    }

    setLoading(false);
  };

  return (
    <StyledContainer maxWidth="lg">
      <Fade in timeout={1000}>
        <StyledPaper elevation={6}>
          <Typography 
            variant="h4" 
            align="center" 
            gutterBottom
            sx={{
              background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',
              backgroundClip: 'text',
              textFillColor: 'transparent',
              fontWeight: 'bold',
              marginBottom: 4
            }}
          >
            –°–∏—Å—Ç–µ–º–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
          </Typography>
          <Box 
            display="flex" 
            justifyContent="space-around" 
            mb={4}
            sx={{ gap: 2 }}
          >
            <StyledButton
              variant="contained"
              onClick={() => handleOperation('search')}
              disabled={loading}
            >
              üîç –ü–æ–∏—Å–∫
            </StyledButton>
            <StyledButton
              variant="contained"
              onClick={() => handleOperation('analyze')}
              disabled={loading}
            >
              üìä –ê–Ω–∞–ª–∏–∑
            </StyledButton>
            <StyledButton
              variant="contained"
              onClick={() => handleOperation('aggregate')}
              disabled={loading}
            >
              üì¶ –ê–≥—Ä–µ–≥–∞—Ü–∏—è
            </StyledButton>
          </Box>
          <Terminal elevation={3}>
            <Box p={2}>
              <Typography variant="body2" color="#00ff00" gutterBottom>
                root@neurocascade:~$ {loading ? 'processing...' : 'ready'}
              </Typography>
              {loading && (
                <Box display="flex" alignItems="center" gap={2} mb={2}>
                  <CircularProgress size={20} color="success" />
                  <Typography variant="body2" color="#00ff00">
                    –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏...
                  </Typography>
                </Box>
              )}
              {logs.map((log, index) => (
                <Fade in timeout={500} key={index}>
                  <Typography 
                    variant="body2" 
                    sx={{ 
                      mb: 1,
                      opacity: 0.9,
                      textShadow: '0 0 5px rgba(0, 255, 0, 0.5)',
                      fontFamily: 'Consolas, Monaco, "Courier New", monospace',
                    }}
                  >
                    {log}
                  </Typography>
                </Fade>
              ))}
            </Box>
          </Terminal>
        </StyledPaper>
      </Fade>
    </StyledContainer>
  );
}

export default SystemLoad; 